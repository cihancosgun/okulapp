<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:cc="http://xmlns.jcp.org/jsf/composite"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">

    <!-- INTERFACE -->
    <cc:interface>
        <cc:attribute name = "shortHeader" />
        <cc:attribute name = "header" />
        <cc:attribute name = "userName" />
        <cc:attribute name = "logoutText" />
        <cc:attribute name = "logoutButtonAction" 
                      method-signature = "java.lang.Void signOut()" />
    </cc:interface>

    <!-- IMPLEMENTATION -->
    <cc:implementation>    
        <script>
            var userid = "#{securityMB.loginUser.email}";
            var wsUrl = "ws://" + window.document.location.host + window.document.location.pathname + "ws";
            var webSocket;

            function init() {
                webSocket = new WebSocket(wsUrl);
                webSocket.onopen = function (evt) {
                    onOpen(event)
                };
                webSocket.onclose = function (evt) {
                    onClose(event)
                };
                webSocket.onmessage = function (evt) {
                    onMessage(event)
                };
                webSocket.onerror = function (evt) {
                    onError(event)
                };
            }

            function onOpen(event) {
                console.log("OnOpen Event");
            }

            function onClose(event) {
                console.log("OnClose Event");
            }

            function onError(event) {
                console.log("OnError Event");
            }

            function sendMessage(message, receivers) {
                var msg = {"userid": userid, "message": message, "receivers": receivers};
                webSocket.send(JSON.stringify(msg));
            }

            function onMessage(event) {
                if (event.data != null) {
                    var msg = JSON.parse(event.data);
                    updateNotification();
                    if (msg.message == "updatechat") {
                        if (refreshChat != null) {
                            refreshChat();
                        }
                    } else if (msg.message == "updatenotify") {
                        if (refreshBoard != null) {
                            refreshBoard();
                        }
                    }
                }
            }

            function closeSocket() {
                webSocket.close();
            }
            window.addEventListener("load", init, false);
            window.addEventListener("unload", closeSocket, false);
        </script>

        <header class="main-header">
            <!-- Logo -->
            <a href="#" class="logo">
                <!-- mini logo for sidebar mini 50x50 pixels -->
                <span class="logo-mini">#{cc.attrs.shortHeader}</span>
                <!-- logo for regular state and mobile devices -->
                <span class="logo-lg">#{cc.attrs.header}</span>
            </a>
            <!-- Header Navbar: style can be found in header.less -->
            <nav class="navbar navbar-static-top">
                <!-- Sidebar toggle button-->
                <a href="#" class="sidebar-toggle" data-toggle="push-menu" role="button">
                    <span class="sr-only"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </a>
                <h:form>
                    <p:remoteCommand name="updateNotification" actionListener="#{boardMB.refreshAllNotify()}"  update="navBarCustomMenu myNotifyMsgs" />
                    <h:panelGroup id="navBarCustomMenu" class="navbar-custom-menu" layout="block">
                        <p:growl id="myNotifyMsgs" showDetail="true"/>
                        <ul class="nav navbar-nav"> 
                            <li class="dropdown messages-menu">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                    <i class="fa fa-envelope-o"></i>
                                    <h:panelGroup id="messageCount" class="label label-success" rendered="#{not chatMB.myUnreadedMessages.isEmpty()}">
                                        ${chatMB.myUnreadedMessages.size()} 
                                    </h:panelGroup>
<!--                                    <p:poll listener="#{boardMB.refreshAllNotify()}" interval="15" update="navBarCustomMenu myNotifyMsgs"/>-->
                                </a>
                                <ul class="dropdown-menu">
                                    <li class="header">${chatMB.myUnreadedMessages.size()} adet okunmamış mesajınız var.</li>
                                    <li>
                                        <!-- inner menu: contains the actual data -->
                                        <ul class="menu">
                                            <c:forEach items="#{chatMB.myUnreadedMessages}" var="rec">
                                                <li><!-- start message -->
                                                    <p:commandLink actionListener="#{dispatcherMB.switchToChatPage(rec.messages)}" immediate="true" update="contentCmp:contentPanelGroup">
                                                        <div class="pull-left">
                                                            <p:graphicImage value="#{chatMB.handleImageFileDownload(securityMB.getUserFromEmail(rec.messages.senderEmail).image)}" stream="false" class="img-circle" alt="Sender User Image"/>
                                                        </div>
                                                        <h4>
                                                            #{rec.messages.senderNameSurname}                                                            
                                                        </h4>
                                                        <small><i class="fa fa-clock-o"></i> #{chatMB.formatDateTime(rec.messages.sendingTime)}</small>
                                                        <p>#{rec.messages.message}</p>
                                                    </p:commandLink>
                                                </li>
                                                <!-- end message -->
                                            </c:forEach>
                                        </ul>
                                    </li>
                                    <li class="footer"><p:commandLink immediate="true" actionListener="#{dispatcherMB.switchToChatPage(null)}" update="contentCmp:contentPanelGroup">Tüm Mesajları Göster</p:commandLink></li>
                                </ul>
                            </li>

                            <li class="dropdown messages-menu">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                    <i class="fa fa-bell-o"></i>
                                    <h:panelGroup class="label label-warning" rendered="#{not boardMB.myUnreadedBoard.isEmpty()}">
                                        ${boardMB.myUnreadedBoard.size()}
                                    </h:panelGroup>
                                </a>
                                <ul class="dropdown-menu"> 
                                    <li class="header">${boardMB.myUnreadedBoard.size()} adet okunmamış bildiriminiz var.</li>
                                    <li>
                                        <!-- inner menu: contains the actual data -->
                                        <ul class="menu">
                                            <c:forEach items="#{boardMB.myUnreadedBoard}" var="rec">
                                                <li><!-- start message -->
                                                    <p:commandLink actionListener="#{dispatcherMB.switchToShowNotify(rec)}" immediate="true" update="contentCmp:contentPanelGroup">
                                                        <div class="pull-left">
                                                            <p:graphicImage value="#{notificationMB.handleMessageTypeIcon(rec.messageType)}" class="img-circle" alt="nfimg" width="30px;" stream="false"/>
                                                        </div> 
                                                        <h4> 
                                                            #{rec.senderNameSurname}                                                            
                                                        </h4>
                                                        <small><i class="fa fa-clock-o"></i> #{chatMB.formatDateTime(rec.startDate)}</small>
                                                        <p>#{rec.message}</p>
                                                    </p:commandLink>
                                                </li>
                                                <!-- end message -->
                                            </c:forEach>
                                        </ul>
                                    </li>
                                    <li class="footer"><p:commandLink actionListener="#{dispatcherMB.switchToBoardPage()}" immediate="true" update="contentCmp:contentPanelGroup">Tüm Bildirimleri Göster</p:commandLink></li>
                                </ul>
                            </li>

                            <!-- User Account: style can be found in dropdown.less -->
                            <li class="dropdown messages-menu">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown">                                
                                    <i class="fa fa-user"></i>
                                </a>
                                <ul class="dropdown-menu">       
                                    <li class="header">
                                        <p:outputLabel value="${securityMB.loginUser.nameSurname}"/>
                                    </li>
                                    <li class="footer">    
                                        <div class="pull-right">
                                            <p:commandButton actionListener="#{securityMB.signOut()}" value="#{cc.attrs.logoutText}" immediate="true" oncomplete="location.reload();"/>
                                        </div>
                                    </li>
                                </ul> 
                            </li>                      
                        </ul>

                    </h:panelGroup>
                </h:form>
            </nav>
        </header>


    </cc:implementation>
</html>